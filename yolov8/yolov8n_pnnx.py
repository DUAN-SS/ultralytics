import os
import numpy as np
import tempfile, zipfile
import torch
import torch.nn as nn
import torch.nn.functional as F
try:
    import torchvision
except:
    pass

class Model(nn.Module):
    def __init__(self):
        super(Model, self).__init__()

        self.model_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=3, kernel_size=(3,3), out_channels=16, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.model_22_cv3_2_1_act = nn.SiLU()
        self.model_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=16, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.pnnx_unique_0 = nn.SiLU()
        self.model_2_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_1 = nn.SiLU()
        self.model_2_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=16, kernel_size=(3,3), out_channels=16, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_2 = nn.SiLU()
        self.model_2_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=16, kernel_size=(3,3), out_channels=16, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_3 = nn.SiLU()
        self.model_2_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=48, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_4 = nn.SiLU()
        self.model_3_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.pnnx_unique_5 = nn.SiLU()
        self.model_4_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_6 = nn.SiLU()
        self.model_4_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_7 = nn.SiLU()
        self.model_4_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_8 = nn.SiLU()
        self.model_4_m_1_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_9 = nn.SiLU()
        self.model_4_m_1_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_10 = nn.SiLU()
        self.model_4_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_11 = nn.SiLU()
        self.model_5_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.pnnx_unique_12 = nn.SiLU()
        self.model_6_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_13 = nn.SiLU()
        self.model_6_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_14 = nn.SiLU()
        self.model_6_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_15 = nn.SiLU()
        self.model_6_m_1_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_16 = nn.SiLU()
        self.model_6_m_1_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_17 = nn.SiLU()
        self.model_6_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_18 = nn.SiLU()
        self.model_7_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.pnnx_unique_19 = nn.SiLU()
        self.model_8_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_20 = nn.SiLU()
        self.model_8_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_21 = nn.SiLU()
        self.model_8_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_22 = nn.SiLU()
        self.model_8_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=384, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_23 = nn.SiLU()
        self.model_9_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_24 = nn.SiLU()
        self.model_9_m = nn.MaxPool2d(ceil_mode=False, dilation=(1,1), kernel_size=(5,5), padding=(2,2), return_indices=False, stride=(1,1))
        self.pnnx_unique_25 = nn.MaxPool2d(ceil_mode=False, dilation=(1,1), kernel_size=(5,5), padding=(2,2), return_indices=False, stride=(1,1))
        self.pnnx_unique_26 = nn.MaxPool2d(ceil_mode=False, dilation=(1,1), kernel_size=(5,5), padding=(2,2), return_indices=False, stride=(1,1))
        self.model_9_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_27 = nn.SiLU()
        self.model_10 = nn.Upsample(mode='nearest', scale_factor=(2.000000,2.000000), size=None)
        self.model_12_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=384, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_28 = nn.SiLU()
        self.model_12_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_29 = nn.SiLU()
        self.model_12_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_30 = nn.SiLU()
        self.model_12_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=192, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_31 = nn.SiLU()
        self.model_13 = nn.Upsample(mode='nearest', scale_factor=(2.000000,2.000000), size=None)
        self.model_15_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=192, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_32 = nn.SiLU()
        self.model_15_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_33 = nn.SiLU()
        self.model_15_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_34 = nn.SiLU()
        self.model_15_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=96, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_35 = nn.SiLU()
        self.model_16_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.pnnx_unique_36 = nn.SiLU()
        self.model_18_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=192, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_37 = nn.SiLU()
        self.model_18_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_38 = nn.SiLU()
        self.model_18_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_39 = nn.SiLU()
        self.model_18_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=192, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_40 = nn.SiLU()
        self.model_19_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.pnnx_unique_41 = nn.SiLU()
        self.model_21_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=384, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_42 = nn.SiLU()
        self.model_21_m_0_cv1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_43 = nn.SiLU()
        self.model_21_m_0_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_44 = nn.SiLU()
        self.model_21_cv2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=384, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_45 = nn.SiLU()
        self.model_22_cv2_0_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_46 = nn.SiLU()
        self.model_22_cv2_0_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_47 = nn.SiLU()
        self.model_22_cv2_0_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.model_22_cv3_0_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=80, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_48 = nn.SiLU()
        self.model_22_cv3_0_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=80, kernel_size=(3,3), out_channels=80, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_49 = nn.SiLU()
        self.model_22_cv3_0_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=80, kernel_size=(1,1), out_channels=80, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.model_22_cv2_1_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_50 = nn.SiLU()
        self.model_22_cv2_1_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_51 = nn.SiLU()
        self.model_22_cv2_1_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.model_22_cv3_1_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=80, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_52 = nn.SiLU()
        self.model_22_cv3_1_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=80, kernel_size=(3,3), out_channels=80, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_53 = nn.SiLU()
        self.model_22_cv3_1_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=80, kernel_size=(1,1), out_channels=80, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.model_22_cv2_2_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_54 = nn.SiLU()
        self.model_22_cv2_2_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_55 = nn.SiLU()
        self.model_22_cv2_2_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.model_22_cv3_2_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=80, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_56 = nn.SiLU()
        self.model_22_cv3_2_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=80, kernel_size=(3,3), out_channels=80, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.pnnx_unique_57 = nn.SiLU()
        self.model_22_cv3_2_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=80, kernel_size=(1,1), out_channels=80, padding=(0,0), padding_mode='zeros', stride=(1,1))

        archive = zipfile.ZipFile('yolov8n.pnnx.bin', 'r')
        self.model_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.0.conv.bias', (16), 'float32')
        self.model_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.0.conv.weight', (16,3,3,3), 'float32')
        self.model_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.1.conv.bias', (32), 'float32')
        self.model_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.1.conv.weight', (32,16,3,3), 'float32')
        self.model_2_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.2.cv1.conv.bias', (32), 'float32')
        self.model_2_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.2.cv1.conv.weight', (32,32,1,1), 'float32')
        self.model_2_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.2.m.0.cv1.conv.bias', (16), 'float32')
        self.model_2_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.2.m.0.cv1.conv.weight', (16,16,3,3), 'float32')
        self.model_2_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.2.m.0.cv2.conv.bias', (16), 'float32')
        self.model_2_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.2.m.0.cv2.conv.weight', (16,16,3,3), 'float32')
        self.model_2_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.2.cv2.conv.bias', (32), 'float32')
        self.model_2_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.2.cv2.conv.weight', (32,48,1,1), 'float32')
        self.model_3_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.3.conv.bias', (64), 'float32')
        self.model_3_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.3.conv.weight', (64,32,3,3), 'float32')
        self.model_4_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.4.cv1.conv.bias', (64), 'float32')
        self.model_4_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.4.cv1.conv.weight', (64,64,1,1), 'float32')
        self.model_4_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.4.m.0.cv1.conv.bias', (32), 'float32')
        self.model_4_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.4.m.0.cv1.conv.weight', (32,32,3,3), 'float32')
        self.model_4_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.4.m.0.cv2.conv.bias', (32), 'float32')
        self.model_4_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.4.m.0.cv2.conv.weight', (32,32,3,3), 'float32')
        self.model_4_m_1_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.4.m.1.cv1.conv.bias', (32), 'float32')
        self.model_4_m_1_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.4.m.1.cv1.conv.weight', (32,32,3,3), 'float32')
        self.model_4_m_1_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.4.m.1.cv2.conv.bias', (32), 'float32')
        self.model_4_m_1_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.4.m.1.cv2.conv.weight', (32,32,3,3), 'float32')
        self.model_4_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.4.cv2.conv.bias', (64), 'float32')
        self.model_4_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.4.cv2.conv.weight', (64,128,1,1), 'float32')
        self.model_5_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.5.conv.bias', (128), 'float32')
        self.model_5_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.5.conv.weight', (128,64,3,3), 'float32')
        self.model_6_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.cv1.conv.bias', (128), 'float32')
        self.model_6_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.cv1.conv.weight', (128,128,1,1), 'float32')
        self.model_6_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.cv1.conv.bias', (64), 'float32')
        self.model_6_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.cv1.conv.weight', (64,64,3,3), 'float32')
        self.model_6_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.cv2.conv.bias', (64), 'float32')
        self.model_6_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.0.cv2.conv.weight', (64,64,3,3), 'float32')
        self.model_6_m_1_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.1.cv1.conv.bias', (64), 'float32')
        self.model_6_m_1_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.1.cv1.conv.weight', (64,64,3,3), 'float32')
        self.model_6_m_1_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.1.cv2.conv.bias', (64), 'float32')
        self.model_6_m_1_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.m.1.cv2.conv.weight', (64,64,3,3), 'float32')
        self.model_6_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.6.cv2.conv.bias', (128), 'float32')
        self.model_6_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.6.cv2.conv.weight', (128,256,1,1), 'float32')
        self.model_7_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.7.conv.bias', (256), 'float32')
        self.model_7_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.7.conv.weight', (256,128,3,3), 'float32')
        self.model_8_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.8.cv1.conv.bias', (256), 'float32')
        self.model_8_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.8.cv1.conv.weight', (256,256,1,1), 'float32')
        self.model_8_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.cv1.conv.bias', (128), 'float32')
        self.model_8_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.cv1.conv.weight', (128,128,3,3), 'float32')
        self.model_8_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.cv2.conv.bias', (128), 'float32')
        self.model_8_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.8.m.0.cv2.conv.weight', (128,128,3,3), 'float32')
        self.model_8_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.8.cv2.conv.bias', (256), 'float32')
        self.model_8_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.8.cv2.conv.weight', (256,384,1,1), 'float32')
        self.model_9_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.9.cv1.conv.bias', (128), 'float32')
        self.model_9_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.9.cv1.conv.weight', (128,256,1,1), 'float32')
        self.model_9_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.9.cv2.conv.bias', (256), 'float32')
        self.model_9_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.9.cv2.conv.weight', (256,512,1,1), 'float32')
        self.model_12_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.12.cv1.conv.bias', (128), 'float32')
        self.model_12_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.12.cv1.conv.weight', (128,384,1,1), 'float32')
        self.model_12_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.12.m.0.cv1.conv.bias', (64), 'float32')
        self.model_12_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.12.m.0.cv1.conv.weight', (64,64,3,3), 'float32')
        self.model_12_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.12.m.0.cv2.conv.bias', (64), 'float32')
        self.model_12_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.12.m.0.cv2.conv.weight', (64,64,3,3), 'float32')
        self.model_12_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.12.cv2.conv.bias', (128), 'float32')
        self.model_12_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.12.cv2.conv.weight', (128,192,1,1), 'float32')
        self.model_15_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.15.cv1.conv.bias', (64), 'float32')
        self.model_15_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.15.cv1.conv.weight', (64,192,1,1), 'float32')
        self.model_15_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.15.m.0.cv1.conv.bias', (32), 'float32')
        self.model_15_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.15.m.0.cv1.conv.weight', (32,32,3,3), 'float32')
        self.model_15_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.15.m.0.cv2.conv.bias', (32), 'float32')
        self.model_15_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.15.m.0.cv2.conv.weight', (32,32,3,3), 'float32')
        self.model_15_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.15.cv2.conv.bias', (64), 'float32')
        self.model_15_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.15.cv2.conv.weight', (64,96,1,1), 'float32')
        self.model_16_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.16.conv.bias', (64), 'float32')
        self.model_16_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.16.conv.weight', (64,64,3,3), 'float32')
        self.model_18_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.18.cv1.conv.bias', (128), 'float32')
        self.model_18_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.18.cv1.conv.weight', (128,192,1,1), 'float32')
        self.model_18_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.18.m.0.cv1.conv.bias', (64), 'float32')
        self.model_18_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.18.m.0.cv1.conv.weight', (64,64,3,3), 'float32')
        self.model_18_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.18.m.0.cv2.conv.bias', (64), 'float32')
        self.model_18_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.18.m.0.cv2.conv.weight', (64,64,3,3), 'float32')
        self.model_18_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.18.cv2.conv.bias', (128), 'float32')
        self.model_18_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.18.cv2.conv.weight', (128,192,1,1), 'float32')
        self.model_19_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.19.conv.bias', (128), 'float32')
        self.model_19_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.19.conv.weight', (128,128,3,3), 'float32')
        self.model_21_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.21.cv1.conv.bias', (256), 'float32')
        self.model_21_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.21.cv1.conv.weight', (256,384,1,1), 'float32')
        self.model_21_m_0_cv1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.21.m.0.cv1.conv.bias', (128), 'float32')
        self.model_21_m_0_cv1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.21.m.0.cv1.conv.weight', (128,128,3,3), 'float32')
        self.model_21_m_0_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.21.m.0.cv2.conv.bias', (128), 'float32')
        self.model_21_m_0_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.21.m.0.cv2.conv.weight', (128,128,3,3), 'float32')
        self.model_21_cv2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.21.cv2.conv.bias', (256), 'float32')
        self.model_21_cv2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.21.cv2.conv.weight', (256,384,1,1), 'float32')
        self.model_22_cv2_0_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.0.0.conv.bias', (64), 'float32')
        self.model_22_cv2_0_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.0.0.conv.weight', (64,64,3,3), 'float32')
        self.model_22_cv2_0_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.0.1.conv.bias', (64), 'float32')
        self.model_22_cv2_0_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.0.1.conv.weight', (64,64,3,3), 'float32')
        self.model_22_cv2_0_2.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.0.2.bias', (64), 'float32')
        self.model_22_cv2_0_2.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.0.2.weight', (64,64,1,1), 'float32')
        self.model_22_cv3_0_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.0.0.conv.bias', (80), 'float32')
        self.model_22_cv3_0_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.0.0.conv.weight', (80,64,3,3), 'float32')
        self.model_22_cv3_0_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.0.1.conv.bias', (80), 'float32')
        self.model_22_cv3_0_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.0.1.conv.weight', (80,80,3,3), 'float32')
        self.model_22_cv3_0_2.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.0.2.bias', (80), 'float32')
        self.model_22_cv3_0_2.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.0.2.weight', (80,80,1,1), 'float32')
        self.model_22_cv2_1_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.1.0.conv.bias', (64), 'float32')
        self.model_22_cv2_1_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.1.0.conv.weight', (64,128,3,3), 'float32')
        self.model_22_cv2_1_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.1.1.conv.bias', (64), 'float32')
        self.model_22_cv2_1_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.1.1.conv.weight', (64,64,3,3), 'float32')
        self.model_22_cv2_1_2.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.1.2.bias', (64), 'float32')
        self.model_22_cv2_1_2.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.1.2.weight', (64,64,1,1), 'float32')
        self.model_22_cv3_1_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.1.0.conv.bias', (80), 'float32')
        self.model_22_cv3_1_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.1.0.conv.weight', (80,128,3,3), 'float32')
        self.model_22_cv3_1_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.1.1.conv.bias', (80), 'float32')
        self.model_22_cv3_1_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.1.1.conv.weight', (80,80,3,3), 'float32')
        self.model_22_cv3_1_2.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.1.2.bias', (80), 'float32')
        self.model_22_cv3_1_2.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.1.2.weight', (80,80,1,1), 'float32')
        self.model_22_cv2_2_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.2.0.conv.bias', (64), 'float32')
        self.model_22_cv2_2_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.2.0.conv.weight', (64,256,3,3), 'float32')
        self.model_22_cv2_2_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.2.1.conv.bias', (64), 'float32')
        self.model_22_cv2_2_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.2.1.conv.weight', (64,64,3,3), 'float32')
        self.model_22_cv2_2_2.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.2.2.bias', (64), 'float32')
        self.model_22_cv2_2_2.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv2.2.2.weight', (64,64,1,1), 'float32')
        self.model_22_cv3_2_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.2.0.conv.bias', (80), 'float32')
        self.model_22_cv3_2_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.2.0.conv.weight', (80,256,3,3), 'float32')
        self.model_22_cv3_2_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.2.1.conv.bias', (80), 'float32')
        self.model_22_cv3_2_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.2.1.conv.weight', (80,80,3,3), 'float32')
        self.model_22_cv3_2_2.bias = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.2.2.bias', (80), 'float32')
        self.model_22_cv3_2_2.weight = self.load_pnnx_bin_as_parameter(archive, 'model.22.cv3.2.2.weight', (80,80,1,1), 'float32')
        archive.close()

    def load_pnnx_bin_as_parameter(self, archive, key, shape, dtype, requires_grad=True):
        return nn.Parameter(self.load_pnnx_bin_as_tensor(archive, key, shape, dtype), requires_grad)

    def load_pnnx_bin_as_tensor(self, archive, key, shape, dtype):
        fd, tmppath = tempfile.mkstemp()
        with os.fdopen(fd, 'wb') as tmpf, archive.open(key) as keyfile:
            tmpf.write(keyfile.read())
        m = np.memmap(tmppath, dtype=dtype, mode='r', shape=shape).copy()
        os.remove(tmppath)
        return torch.from_numpy(m)

    def forward(self, v_0):
        v_1 = self.model_0_conv(v_0)
        v_2 = self.model_22_cv3_2_1_act(v_1)
        v_3 = self.model_1_conv(v_2)
        v_4 = self.pnnx_unique_0(v_3)
        v_5 = self.model_2_cv1_conv(v_4)
        v_6 = self.pnnx_unique_1(v_5)
        v_7, v_8 = torch.split(tensor=v_6, dim=1, split_size_or_sections=(16,16))
        v_9 = self.model_2_m_0_cv1_conv(v_8)
        v_10 = self.pnnx_unique_2(v_9)
        v_11 = self.model_2_m_0_cv2_conv(v_10)
        v_12 = self.pnnx_unique_3(v_11)
        v_13 = (v_8 + v_12)
        v_14 = torch.cat((v_7, v_8, v_13), dim=1)
        v_15 = self.model_2_cv2_conv(v_14)
        v_16 = self.pnnx_unique_4(v_15)
        v_17 = self.model_3_conv(v_16)
        v_18 = self.pnnx_unique_5(v_17)
        v_19 = self.model_4_cv1_conv(v_18)
        v_20 = self.pnnx_unique_6(v_19)
        v_21, v_22 = torch.split(tensor=v_20, dim=1, split_size_or_sections=(32,32))
        v_23 = self.model_4_m_0_cv1_conv(v_22)
        v_24 = self.pnnx_unique_7(v_23)
        v_25 = self.model_4_m_0_cv2_conv(v_24)
        v_26 = self.pnnx_unique_8(v_25)
        v_27 = (v_22 + v_26)
        v_28 = self.model_4_m_1_cv1_conv(v_27)
        v_29 = self.pnnx_unique_9(v_28)
        v_30 = self.model_4_m_1_cv2_conv(v_29)
        v_31 = self.pnnx_unique_10(v_30)
        v_32 = (v_27 + v_31)
        v_33 = torch.cat((v_21, v_22, v_27, v_32), dim=1)
        v_34 = self.model_4_cv2_conv(v_33)
        v_35 = self.pnnx_unique_11(v_34)
        v_36 = self.model_5_conv(v_35)
        v_37 = self.pnnx_unique_12(v_36)
        v_38 = self.model_6_cv1_conv(v_37)
        v_39 = self.pnnx_unique_13(v_38)
        v_40, v_41 = torch.split(tensor=v_39, dim=1, split_size_or_sections=(64,64))
        v_42 = self.model_6_m_0_cv1_conv(v_41)
        v_43 = self.pnnx_unique_14(v_42)
        v_44 = self.model_6_m_0_cv2_conv(v_43)
        v_45 = self.pnnx_unique_15(v_44)
        v_46 = (v_41 + v_45)
        v_47 = self.model_6_m_1_cv1_conv(v_46)
        v_48 = self.pnnx_unique_16(v_47)
        v_49 = self.model_6_m_1_cv2_conv(v_48)
        v_50 = self.pnnx_unique_17(v_49)
        v_51 = (v_46 + v_50)
        v_52 = torch.cat((v_40, v_41, v_46, v_51), dim=1)
        v_53 = self.model_6_cv2_conv(v_52)
        v_54 = self.pnnx_unique_18(v_53)
        v_55 = self.model_7_conv(v_54)
        v_56 = self.pnnx_unique_19(v_55)
        v_57 = self.model_8_cv1_conv(v_56)
        v_58 = self.pnnx_unique_20(v_57)
        v_59, v_60 = torch.split(tensor=v_58, dim=1, split_size_or_sections=(128,128))
        v_61 = self.model_8_m_0_cv1_conv(v_60)
        v_62 = self.pnnx_unique_21(v_61)
        v_63 = self.model_8_m_0_cv2_conv(v_62)
        v_64 = self.pnnx_unique_22(v_63)
        v_65 = (v_60 + v_64)
        v_66 = torch.cat((v_59, v_60, v_65), dim=1)
        v_67 = self.model_8_cv2_conv(v_66)
        v_68 = self.pnnx_unique_23(v_67)
        v_69 = self.model_9_cv1_conv(v_68)
        v_70 = self.pnnx_unique_24(v_69)
        v_71 = self.model_9_m(v_70)
        v_72 = self.pnnx_unique_25(v_71)
        v_73 = self.pnnx_unique_26(v_72)
        v_74 = torch.cat((v_70, v_71, v_72, v_73), dim=1)
        v_75 = self.model_9_cv2_conv(v_74)
        v_76 = self.pnnx_unique_27(v_75)
        v_77 = self.model_10(v_76)
        v_78 = torch.cat((v_77, v_54), dim=1)
        v_79 = self.model_12_cv1_conv(v_78)
        v_80 = self.pnnx_unique_28(v_79)
        v_81, v_82 = torch.split(tensor=v_80, dim=1, split_size_or_sections=(64,64))
        v_83 = self.model_12_m_0_cv1_conv(v_82)
        v_84 = self.pnnx_unique_29(v_83)
        v_85 = self.model_12_m_0_cv2_conv(v_84)
        v_86 = self.pnnx_unique_30(v_85)
        v_87 = torch.cat((v_81, v_82, v_86), dim=1)
        v_88 = self.model_12_cv2_conv(v_87)
        v_89 = self.pnnx_unique_31(v_88)
        v_90 = self.model_13(v_89)
        v_91 = torch.cat((v_90, v_35), dim=1)
        v_92 = self.model_15_cv1_conv(v_91)
        v_93 = self.pnnx_unique_32(v_92)
        v_94, v_95 = torch.split(tensor=v_93, dim=1, split_size_or_sections=(32,32))
        v_96 = self.model_15_m_0_cv1_conv(v_95)
        v_97 = self.pnnx_unique_33(v_96)
        v_98 = self.model_15_m_0_cv2_conv(v_97)
        v_99 = self.pnnx_unique_34(v_98)
        v_100 = torch.cat((v_94, v_95, v_99), dim=1)
        v_101 = self.model_15_cv2_conv(v_100)
        v_102 = self.pnnx_unique_35(v_101)
        v_103 = self.model_16_conv(v_102)
        v_104 = self.pnnx_unique_36(v_103)
        v_105 = torch.cat((v_104, v_89), dim=1)
        v_106 = self.model_18_cv1_conv(v_105)
        v_107 = self.pnnx_unique_37(v_106)
        v_108, v_109 = torch.split(tensor=v_107, dim=1, split_size_or_sections=(64,64))
        v_110 = self.model_18_m_0_cv1_conv(v_109)
        v_111 = self.pnnx_unique_38(v_110)
        v_112 = self.model_18_m_0_cv2_conv(v_111)
        v_113 = self.pnnx_unique_39(v_112)
        v_114 = torch.cat((v_108, v_109, v_113), dim=1)
        v_115 = self.model_18_cv2_conv(v_114)
        v_116 = self.pnnx_unique_40(v_115)
        v_117 = self.model_19_conv(v_116)
        v_118 = self.pnnx_unique_41(v_117)
        v_119 = torch.cat((v_118, v_76), dim=1)
        v_120 = self.model_21_cv1_conv(v_119)
        v_121 = self.pnnx_unique_42(v_120)
        v_122, v_123 = torch.split(tensor=v_121, dim=1, split_size_or_sections=(128,128))
        v_124 = self.model_21_m_0_cv1_conv(v_123)
        v_125 = self.pnnx_unique_43(v_124)
        v_126 = self.model_21_m_0_cv2_conv(v_125)
        v_127 = self.pnnx_unique_44(v_126)
        v_128 = torch.cat((v_122, v_123, v_127), dim=1)
        v_129 = self.model_21_cv2_conv(v_128)
        v_130 = self.pnnx_unique_45(v_129)
        v_131 = self.model_22_cv2_0_0_conv(v_102)
        v_132 = self.pnnx_unique_46(v_131)
        v_133 = self.model_22_cv2_0_1_conv(v_132)
        v_134 = self.pnnx_unique_47(v_133)
        v_135 = self.model_22_cv2_0_2(v_134)
        v_136 = self.model_22_cv3_0_0_conv(v_102)
        v_137 = self.pnnx_unique_48(v_136)
        v_138 = self.model_22_cv3_0_1_conv(v_137)
        v_139 = self.pnnx_unique_49(v_138)
        v_140 = self.model_22_cv3_0_2(v_139)
        v_141 = F.sigmoid(input=v_140)
        v_142 = torch.permute(input=v_141, dims=(0,2,3,1))
        v_143 = torch.permute(input=v_135, dims=(0,2,3,1))
        v_144 = self.model_22_cv2_1_0_conv(v_116)
        v_145 = self.pnnx_unique_50(v_144)
        v_146 = self.model_22_cv2_1_1_conv(v_145)
        v_147 = self.pnnx_unique_51(v_146)
        v_148 = self.model_22_cv2_1_2(v_147)
        v_149 = self.model_22_cv3_1_0_conv(v_116)
        v_150 = self.pnnx_unique_52(v_149)
        v_151 = self.model_22_cv3_1_1_conv(v_150)
        v_152 = self.pnnx_unique_53(v_151)
        v_153 = self.model_22_cv3_1_2(v_152)
        v_154 = F.sigmoid(input=v_153)
        v_155 = torch.permute(input=v_154, dims=(0,2,3,1))
        v_156 = torch.permute(input=v_148, dims=(0,2,3,1))
        v_157 = self.model_22_cv2_2_0_conv(v_130)
        v_158 = self.pnnx_unique_54(v_157)
        v_159 = self.model_22_cv2_2_1_conv(v_158)
        v_160 = self.pnnx_unique_55(v_159)
        v_161 = self.model_22_cv2_2_2(v_160)
        v_162 = self.model_22_cv3_2_0_conv(v_130)
        v_163 = self.pnnx_unique_56(v_162)
        v_164 = self.model_22_cv3_2_1_conv(v_163)
        v_165 = self.pnnx_unique_57(v_164)
        v_166 = self.model_22_cv3_2_2(v_165)
        v_167 = F.sigmoid(input=v_166)
        v_168 = torch.permute(input=v_167, dims=(0,2,3,1))
        v_169 = torch.permute(input=v_161, dims=(0,2,3,1))
        v_170 = torch.cat((v_169, v_168), dim=-1)
        v_171 = torch.cat((v_156, v_155), dim=-1)
        v_172 = torch.cat((v_143, v_142), dim=-1)
        v_173 = (v_172, v_171, v_170, )
        return v_173

def export_torchscript():
    net = Model()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, -1, -1, dtype=torch.float)

    mod = torch.jit.trace(net, v_0)
    mod.save("yolov8n_pnnx.py.pt")

def export_onnx():
    net = Model()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, -1, -1, dtype=torch.float)

    torch.onnx._export(net, v_0, "yolov8n_pnnx.py.onnx", export_params=True, operator_export_type=torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK, opset_version=13, input_names=['in0'], output_names=['out0'])

def test_inference():
    net = Model()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, -1, -1, dtype=torch.float)

    return net(v_0)
